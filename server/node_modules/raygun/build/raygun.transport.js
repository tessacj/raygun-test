/*
 * raygun
 * https://github.com/MindscapeHQ/raygun4node
 *
 * Copyright (c) 2015 MindscapeHQ
 * Licensed under the MIT license.
 */
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = __importDefault(require("http"));
var https_1 = __importDefault(require("https"));
var types_1 = require("./types");
var debug = require("debug")("raygun");
var API_HOST = "api.raygun.io";
var DEFAULT_ENDPOINT = "/entries";
var BATCH_ENDPOINT = "/entries/bulk";
function sendBatch(options) {
    return send(options, BATCH_ENDPOINT);
}
exports.sendBatch = sendBatch;
function send(options, path) {
    if (path === void 0) { path = DEFAULT_ENDPOINT; }
    try {
        var data = Buffer.from(options.message);
        var httpOptions = {
            host: options.http.host || API_HOST,
            port: options.http.port || 443,
            path: path,
            method: "POST",
            headers: {
                Host: API_HOST,
                "Content-Type": "application/json",
                "Content-Length": data.length,
                "X-ApiKey": options.http.apiKey,
            },
        };
        var cb = function (response) {
            if (options.callback) {
                return types_1.callVariadicCallback(options.callback, null, response);
            }
        };
        var httpLib = options.http.useSSL ? https_1.default : http_1.default;
        var request = httpLib.request(httpOptions, cb);
        request.on("error", function (e) {
            console.log("Raygun: error " + e.message + " occurred while attempting to send error with message: " + options.message);
            // If the callback has two parameters, it should expect an `error` value.
            if (options.callback && types_1.isCallbackWithError(options.callback)) {
                options.callback(e, null);
            }
        });
        request.write(data);
        request.end();
    }
    catch (e) {
        console.log("Raygun: error " + e + " occurred while attempting to send error with message: " + options.message);
    }
}
exports.send = send;
