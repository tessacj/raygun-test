"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var transport = __importStar(require("./raygun.transport"));
// Read stdin synchronously
var data = fs_1.default.readFileSync(0, "utf-8");
var options = JSON.parse(data);
var sendOptions = __assign(__assign({}, options), { callback: callback });
transport.send(sendOptions);
function callback(error, result) {
    if (error) {
        console.log("Error sending with sync transport", error);
    }
    else {
        console.log("[raygun-apm] Successfully reported uncaught exception to Raygun");
    }
}
